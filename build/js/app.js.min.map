{"version":3,"sources":["app.js"],"names":["main","document","querySelector","main2","getElementsByTagName","body","body2","html1","html2","p","h1","span","dnButton","logo","dataLALA","dataXD","searchInput","countryList","countries","showCountry","itemone","itemtwo","overlay","createElement","classList","add","addEventListener","e","clearContent","init","remove","error","console","log","divButton","button","textContent","appendChild","divFlag","img","src","flag","title","countryName","divData","nativeName","innerHTML","population","region","subRegion","subregion","capital","topLevelDomain","toplvldomain","currencies","name","code","symbol","languageList","lang","languages","forEach","langu","divBorder","divBorderTitle","borderCountriesList","country","borders","countrya","divBorderCountries","target","countryLink","filter","alpha3Code","includes","divContent","divCountryInfo","first","firstElementChild","nextElementSibling","insertBefore","window","scrollTo","onclick","selectCountry","card","LALA","scrollTop","selectedCountry","children","selectedCountry_image","selectedCountry_content","selectedCountry_content_population","selectedCountry_content_region","selectedCountry_content_capital","selectedCountryItems","data","type","fatherDiv","id","childElementCount","length","div","setAttribute","card__image","card__content","populationA","spanPopulation","regionA","spanRegion","capitalA","spanCapital","flagA","nameB","itemoneE","nativeNameA","subregionA","toplvldomainA","currenciesA","languagesA","bordersA","launchApp","fetch","then","res","json","getData","catch","err","dnButtonF","contains","dnButtonTC","i","len","countriesContainer","firstChild","removeChild","showError","message","searchBar","contryList","setNoResults","value","getRelevancy","searchTerm","startsWith","trim","toLowerCase","group","showNewCards","nameA","sort","countryA","countryB","backToStart","countryObj","addCountryToList","item","filterInput","this","dataEurope","dataAfrica","dataOceania","dataAsia","dataAmerica"],"mappings":"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","file":"app.js","sourcesContent":["const main = document.querySelector('main');\r\nconst main2 = document.getElementsByTagName('main');\r\nconst body = document.querySelector('.body');\r\nconst body2 = document.getElementsByTagName('body');\r\nconst html1 = document.querySelector('#html');\r\nconst html2 = document.getElementsByTagName('html');\r\nconst p = document.getElementsByTagName('p');\r\nconst h1 = document.getElementsByTagName('h1');\r\nconst span = document.getElementsByTagName('span');\r\nconst dnButton = document.querySelector('.style-button-toggle');\r\nconst logo = document.querySelector('#logo');\r\nlet dataLALA \r\nlet dataXD\r\nconst searchInput = document.querySelector('#search');\r\nconst countryList = {\r\n    countries: []\r\n}\r\n// https://restcountries.eu/rest/v2/all\r\n\r\n\r\nconst showCountry = (itemone, itemtwo) => {\r\n\r\n    const overlay = document.createElement('div');\r\n    overlay.classList.add('overlay');\r\n\r\n    // LOGO CLICK BACK TO INDEX\r\n    logo.addEventListener('click', function(e){\r\n        clearContent();\r\n        init(dataLALA, 'load');\r\n        try {\r\n            if (overlay) {\r\n                overlay.remove();\r\n            }\r\n        body.classList.remove('fix-body');\r\n        main.classList.remove('position-absolute');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    })\r\n\r\n\r\n    const divButton = document.createElement('div');\r\n    divButton.classList.add('back_button');\r\n    \r\n    const button = document.createElement('button');\r\n    button.classList.add('button');\r\n    button.textContent = 'Back';\r\n    divButton.appendChild(button);\r\n\r\n    \r\n    const divFlag = document.createElement('div');\r\n    divFlag.classList.add('flag');\r\n\r\n    const img = document.createElement('img');\r\n    img.src = itemtwo.flag;\r\n\r\n    divFlag.appendChild(img);\r\n\r\n\r\n    const title = document.createElement('p');\r\n    title.textContent = itemtwo.countryName;\r\n\r\n    title.classList.add('overlay__content-title');\r\n\r\n    const divData = document.createElement('div');\r\n    divData.classList.add('overlay__content-data');\r\n\r\n    const nativeName = document.createElement('p');\r\n        nativeName.innerHTML = `Native name: <span>${itemone.nativeName}</span>`;\r\n    const population = document.createElement('p');\r\n        population.innerHTML = `Population: <span>${itemtwo.population}</span>`;\r\n    const region = document.createElement('p');\r\n        region.innerHTML = `Region: <span>${itemtwo.region}</span>`;\r\n    const subRegion = document.createElement('p');\r\n        subRegion.innerHTML = `Sub region: <span>${itemone.subregion}</span>`;\r\n    const capital = document.createElement('p');\r\n        capital.innerHTML = `Capital: <span>${itemtwo.capital}</span>`;\r\n    const topLevelDomain = document.createElement('p');\r\n        topLevelDomain.innerHTML = `Top Level Domain: <span>${itemone.toplvldomain}</span>`;\r\n    const currencies = document.createElement('p');\r\n        currencies.innerHTML = `Currencies: <span>${itemone.currencies[0].name} ${itemone.currencies[0].code} ${itemone.currencies[0].symbol}</span>`;\r\n    \r\n\r\n        const languageList = {\r\n            lang: ''\r\n        };\r\n        const lala = itemone.languages\r\n        lala.forEach(function(langu){\r\n            const { lang } = languageList;\r\n    \r\n            languageList.lang = [...lang, `${langu.name} `];\r\n        });\r\n\r\n      \r\n\r\n\r\n\r\n        const languages = document.createElement('p');\r\n        languages.innerHTML = `Languages: <span>${languageList.lang}</span>`;\r\n     \r\n\r\n\r\n    divData.appendChild(nativeName);\r\n    divData.appendChild(population);\r\n    divData.appendChild(region);\r\n    divData.appendChild(subRegion);\r\n    divData.appendChild(capital);\r\n    divData.appendChild(topLevelDomain);\r\n    divData.appendChild(currencies);\r\n    divData.appendChild(languages);\r\n\r\n    const divBorder = document.createElement('div');\r\n    divBorder.classList.add('overlay__content-border');\r\n    \r\n    const divBorderTitle = document.createElement('div');\r\n    divBorderTitle.classList.add('overlay__content-border__title');\r\n    divBorderTitle.innerHTML = `<p>Border countries :</p>`;\r\n\r\n    \r\n    \r\n    let borderCountriesList = {\r\n        country: '',\r\n    };\r\n\r\n    let borderCountries = itemone.borders;\r\n    borderCountries.forEach(function(countrya){\r\n\r\n        const { country } = borderCountriesList;\r\n        borderCountriesList.country = [...country, `<span>${countrya}</span>`];\r\n        console.log(borderCountriesList.country);\r\n        \r\n    });\r\n\r\n    const divBorderCountries = document.createElement('div');\r\n    divBorderCountries.classList.add('overlay__content-border__countries');\r\n    divBorderCountries.innerHTML = `${borderCountriesList.country}`;\r\n \r\n    divBorderCountries.addEventListener('click', function(e) {\r\n        let code = e.target.textContent;\r\n        const countryLink = dataLALA.filter(country => {\r\n            return country.alpha3Code.includes(code);\r\n        });\r\n        console.log(countryLink);\r\n        clearContent();\r\n        init(countryLink, 'load');\r\n        overlay.remove();\r\n        body.classList.remove('fix-body');\r\n        main.classList.remove('position-absolute');\r\n        main.classList.remove('hidden');\r\n        \r\n    })\r\n\r\n\r\n    divBorder.appendChild(divBorderTitle);\r\n    divBorder.appendChild(divBorderCountries);\r\n\r\n    const divContent = document.createElement('div');\r\n    divContent.classList.add('content');\r\n            divContent.appendChild(title);\r\n            divContent.appendChild(divData);\r\n            divContent.appendChild(divBorder);\r\n\r\n    const divCountryInfo = document.createElement('div');\r\n    divCountryInfo.classList.add('countryinfo');\r\n            divCountryInfo.appendChild(divFlag);\r\n            divCountryInfo.appendChild(divContent);\r\n\r\n    overlay.appendChild(divButton);\r\n    overlay.appendChild(divCountryInfo)\r\n\r\n    \r\n    const first = body.firstElementChild.nextElementSibling;\r\n\r\n    body.insertBefore(overlay, first);\r\n    // body.classList.add('fix-body');\r\n   \r\n\r\n    window.scrollTo(0, 0)\r\n    const main = document.querySelector('.container')\r\n    main.classList.add('hidden');\r\n\r\n    button.onclick = function() {\r\n        overlay.remove();\r\n        body.classList.remove('fix-body');\r\n        main.classList.remove('position-absolute')\r\n        main.classList.remove('hidden');\r\n    }\r\n\r\n};\r\n\r\nconst selectCountry = (card, LALA) => {\r\n    card.addEventListener('click', function(e) {\r\n\r\n        console.log( body.scrollTop)\r\n        const selectedCountry = card.children;\r\n\r\n        const selectedCountry_image = selectedCountry[0].firstElementChild.src;\r\n        // console.log(selectedCountry_image);\r\n        const selectedCountry_content = selectedCountry[1]; // DONT TOUCH\r\n            const selectedCountry_content_population = (selectedCountry_content.children)[[1][0]];\r\n            // console.log(selectedCountry_content_population.children[0].textContent)\r\n\r\n            const selectedCountry_content_region = (selectedCountry_content.children)[[2][0]];\r\n            // console.log(selectedCountry_content_region.children[0].textContent)\r\n\r\n            const selectedCountry_content_capital = (selectedCountry_content.children)[[3][0]];\r\n            // console.log(selectedCountry_content_capital.children[0].textContent)\r\n            \r\n            \r\n        const selectedCountryItems = {\r\n            flag: selectedCountry_image,\r\n            countryName: selectedCountry_content.firstElementChild.textContent,\r\n            population: selectedCountry_content_population.children[0].textContent,\r\n            region: selectedCountry_content_region.children[0].textContent,\r\n            capital: selectedCountry_content_capital.children[0].textContent\r\n        }\r\n        showCountry(LALA, selectedCountryItems);\r\n        \r\n    })\r\n};\r\n\r\nconst init = (data, type) => {\r\n\r\n  \r\n\r\n    \r\n    const fatherDiv = document.querySelector('.countries-container');\r\n\r\n    let id = 0;\r\n   \r\n    data.forEach((country) => {\r\n\r\n     \r\n        if ( fatherDiv.childElementCount + 1 > data.length) {\r\n            return\r\n        }\r\n        // if (x > 50) {\r\n        //     console.log(x)\r\n        //     return\r\n        // }\r\n\r\n        // console.log(country);\r\n        const { flag, name, population, region, capital } = country;\r\n        let { nativeName, subregion, topLevelDomain, currencies, languages, borders } = country;\r\n\r\n        let div = document.createElement('div');\r\n        div.classList.add('card');\r\n\r\n        div.setAttribute('data-id',  `${id}`);\r\n        \r\n        id++;\r\n\r\n        let card__image = document.createElement('div');\r\n        card__image.classList.add('card__image');\r\n            let img = document.createElement('img');\r\n\r\n        let card__content = document.createElement('div');\r\n        card__content.classList.add('card__content');\r\n            let title = document.createElement('p');\r\n                title.classList.add('card__content-title');\r\n            let populationA = document.createElement('p');\r\n                populationA.classList.add('card__content-subtitle');\r\n                let spanPopulation = document.createElement('span');\r\n                    spanPopulation.classList.add('card__content-span')\r\n            let regionA = document.createElement('p');\r\n                regionA.classList.add('card__content-subtitle');\r\n                let spanRegion = document.createElement('span');\r\n                    spanRegion.classList.add('card__content-span')\r\n            let capitalA = document.createElement('p');\r\n                capitalA.classList.add('card__content-subtitle');\r\n                let spanCapital = document.createElement('span');\r\n                    spanCapital.classList.add('card__content-span')\r\n        \r\n\r\n        // console.log('asignando variables')\r\n        \r\n        if (country.flagA) {\r\n            img.src = country.flagA;\r\n        title.textContent = country.nameB;\r\n        // console.log(populationA);\r\n            spanPopulation.textContent = country.populationA;\r\n            spanRegion.textContent = country.regionA;\r\n            spanCapital.textContent = country.capitalA;\r\n        } else {\r\n         \r\n            img.src = flag;\r\n            title.textContent = name;\r\n            // console.log(populationA);\r\n                spanPopulation.textContent = population;\r\n                spanRegion.textContent = region;\r\n                spanCapital.textContent = capital;\r\n        }\r\n        \r\n\r\n        card__image.appendChild(img);\r\n         \r\n        \r\n        card__content.appendChild(title);\r\n        \r\n        card__content.appendChild(populationA);\r\n        \r\n            populationA.innerHTML = `Population: <span class=\"card__content-span\">${spanPopulation.textContent}</span>`;\r\n            \r\n        card__content.appendChild(regionA);\r\n        \r\n            regionA.innerHTML = `Region: <span class=\"card__content-span\">${spanRegion.textContent}</span>`;\r\n            \r\n        card__content.appendChild(capitalA);\r\n        \r\n            capitalA.innerHTML = `Capital: <span class=\"card__content-span\">${spanCapital.textContent}</span>`;\r\n\r\n        div.appendChild(card__image);\r\n        div.appendChild(card__content);\r\n        \r\n        fatherDiv.appendChild(div);\r\n\r\n        if (type === 'search') {\r\n            \r\n            let itemoneE = {\r\n                // flag: selectedCountry_image,\r\n                // countryName: selectedCountry_content.firstElementChild.textContent,\r\n                // population: selectedCountry_content_population.children[0].textContent,\r\n                // region: selectedCountry_content_region.children[0].textContent,\r\n                // capital: selectedCountry_content_capital.children[0].textContent\r\n                nativeName: country.nativeNameA,\r\n                subregion: country.subregionA,\r\n                toplvldomain: country.toplvldomainA,\r\n                currencies: country.currenciesA,\r\n                languages: country.languagesA,\r\n                borders: country.bordersA\r\n                \r\n            }\r\n  \r\n            selectCountry(div, itemoneE);\r\n        } else if (type === 'load') {\r\n            let itemoneE = {\r\n                // flag: selectedCountry_image,\r\n                // countryName: selectedCountry_content.firstElementChild.textContent,\r\n                // population: selectedCountry_content_population.children[0].textContent,\r\n                // region: selectedCountry_content_region.children[0].textContent,\r\n                // capital: selectedCountry_content_capital.children[0].textContent\r\n                nativeName: country.nativeName,\r\n                subregion: country.subregion,\r\n                toplvldomain: country.topLevelDomain,\r\n                currencies: country.currencies,\r\n                languages: country.languages,\r\n                borders: country.borders\r\n                \r\n            }\r\n            selectCountry(div, itemoneE);\r\n        }\r\n\r\n    })\r\n    \r\n}\r\n\r\nconst launchApp = () => {\r\n    try {\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n        .then(function(res){\r\n            console.log(res);\r\n            return res.json();\r\n        })\r\n        .then(function(data){\r\n            init(data, 'load');\r\n            getData(data);\r\n            dataLALA = data;\r\n        })\r\n        .catch(function(err){\r\n            console.log(err);\r\n        })\r\n    } catch (error) {\r\n        console.log(error) \r\n    }\r\n}\r\n\r\nconst dnButtonF = () => {\r\n    dnButton.addEventListener('click', function(){\r\n        if (html1.classList.contains('night')){\r\n\r\n            const dnButtonIMG = document.querySelector('#style-button-toggle__img');\r\n            dnButtonIMG.src = './build/img/moon.png';\r\n\r\n            const dnButtonTC = document.querySelector('.style-button-toggle__span');\r\n            dnButtonTC.innerHTML = '';\r\n            dnButtonTC.innerHTML = 'Night mode';\r\n\r\n            \r\n            for (var i = 0, len = html2.length; i < len; i++) {\r\n                // elements[i].style ...\r\n                html2[i].classList.remove('night');\r\n            }\r\n           \r\n            for (var i = 0, len = body2.length; i < len; i++) {\r\n                // elements[i].style ...\r\n                body2[i].classList.remove('night');\r\n            }\r\n            const searchBar = document.querySelector('#search');\r\n            searchBar.classList.remove('night');\r\n            const select = document.querySelector('#filter');\r\n            select.classList.remove('night');\r\n\r\n            \r\n        } else {\r\n\r\n            const dnButtonTC = document.querySelector('.style-button-toggle__span');\r\n            dnButtonTC.innerHTML = '';\r\n            dnButtonTC.innerHTML = 'Day mode';\r\n\r\n            const dnButtonIMG = document.querySelector('#style-button-toggle__img');\r\n            dnButtonIMG.src = './build/img/sun.png';\r\n\r\n         \r\n            for (var i = 0, len = html2.length; i < len; i++) {\r\n                // elements[i].style ...\r\n                html2[i].classList.add('night');\r\n            }\r\n     \r\n            for (var i = 0, len = body2.length; i < len; i++) {\r\n                // elements[i].style ...\r\n                body2[i].classList.add('night');\r\n            }\r\n            const searchBar = document.querySelector('#search');\r\n            searchBar.classList.add('night');\r\n            const select = document.querySelector('#filter');\r\n            select.classList.add('night');\r\n        }\r\n    });\r\n}\r\n\r\nconst clearContent = (data) => {\r\n    \r\n    const countriesContainer = document.querySelector('.countries-container');\r\n    while ( countriesContainer.firstChild ) {\r\n        countriesContainer.removeChild(countriesContainer.firstChild);\r\n    }\r\n    \r\n};\r\n\r\nconst showError = (message, type) => {\r\n    const fatherDiv = document.querySelector('.countries-container');\r\n    const error = document.createElement('p');\r\n    error.classList.add(`${type}`);\r\n    error.textContent = `${message}`;\r\n    fatherDiv.appendChild(error);\r\n}\r\n\r\nconst searchBar = (contryList) => {\r\n\r\n   \r\n\r\n    const showNewCards = (group) => {\r\n        clearContent();\r\n        for (const country of group) {\r\n            const filter = document.querySelector('#filter');\r\n            filter.value = 'All';\r\n            init(group, 'search');\r\n        }\r\n        if ( group.length === 0) {\r\n            setNoResults();\r\n        }\r\n    }\r\n\r\n    const setNoResults = () => {\r\n        const filter = document.querySelector('#filter');\r\n            filter.value = 'All';\r\n        showError(`There's no country that matches with your search term, please, try again in English`, `error`);\r\n    } \r\n\r\n    const getRelevancy = (value, searchTerm) => {\r\n        if ( value === searchTerm) {\r\n            return 2;\r\n        } else if( value.startsWith(searchTerm)) {\r\n            return 1;\r\n        } else if ( value.includes(searchTerm)) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    searchInput.addEventListener('change', function(e) {\r\n        let value = e.target.value;\r\n        if(value && value.trim().length > 0) {\r\n            value = value.trim().toLowerCase();\r\n            // console.log(country);\r\n            showNewCards(countryList.countries.filter(country => {\r\n                return country.nameA.includes(value)\r\n            }).sort((countryA, countryB) => {\r\n                return getRelevancy(countryB.nameA, value) - getRelevancy(countryA.nameA, value);\r\n            }));\r\n        } else {\r\n            const filter = document.querySelector('#filter');\r\n            filter.value = 'All';\r\n            clearContent();\r\n            backToStart(dataLALA);\r\n        }\r\n    });\r\n}\r\n\r\nconst getData = (data) => {\r\n    data.forEach((country)=> {\r\n        const { flag, name, population, region, capital, nativeName, subregion, topLevelDomain, currencies, languages, borders } = country;\r\n        \r\n        const countryObj = {\r\n            flagA: country.flag,\r\n            nameA: country.name.toLowerCase(),\r\n            nameB: country.name,\r\n            populationA: country.population,\r\n            regionA: country.region, \r\n            capitalA: country.capital,\r\n            bordersA: country.borders,\r\n            currenciesA: country.currencies,\r\n            languagesA: country.languages, \r\n            nativeNameA: country.nativeName,\r\n            subregionA: country.subregion,\r\n            toplvldomainA: country.topLevelDomain\r\n        }\r\n\r\n        addCountryToList(countryObj);\r\n\r\n       \r\n    });\r\n}\r\n\r\nconst addCountryToList = (item) => {\r\n    const { countries } = countryList;\r\n    countryList.countries = [...countries, item];\r\n    if (countryList.countries.length >= 250) {\r\n        searchBar(countryList.countries);\r\n    }\r\n}\r\n\r\nconst backToStart = (data) => {\r\n    init(data, 'load');\r\n}   \r\n\r\nconst filterInput = () => {\r\n    const filter = document.querySelector('#filter')\r\n    console.log(filter)\r\n    filter.addEventListener(\"change\", function(e){\r\n        if(this.value === 'All') {\r\n            clearContent();\r\n  \r\n            \r\n            init(dataLALA, 'load');\r\n        }\r\n        if(this.value === 'Europe') {\r\n            clearContent();\r\n            \r\n            const dataEurope = dataLALA.filter(country => {\r\n                return country.region.includes('Europe');\r\n            });\r\n            searchInput.addEventListener('change', function(){\r\n                searchBar(dataEurope);\r\n                console.log('searching on europe');\r\n            })\r\n      \r\n            init(dataEurope, 'load');\r\n        }\r\n        if(this.value === 'Africa') {\r\n            clearContent();\r\n     \r\n            const dataAfrica = dataLALA.filter(country => {\r\n                return country.region.includes('Africa');\r\n                \r\n            });\r\n    \r\n            init(dataAfrica, 'load');\r\n        }\r\n        if(this.value === 'Oceania') {\r\n            clearContent();\r\n           \r\n            const dataOceania = dataLALA.filter(country => {\r\n                return country.region.includes('Oceania');\r\n                \r\n            });\r\n       \r\n            init(dataOceania, 'load');\r\n        }\r\n        if(this.value === 'Asia') {\r\n            clearContent();\r\n          \r\n            const dataAsia = dataLALA.filter(country => {\r\n                return country.region.includes('Asia');\r\n                \r\n            });\r\n        \r\n            init(dataAsia, 'load');\r\n        }\r\n        if(this.value === 'America') {\r\n            clearContent();\r\n   \r\n            const dataAmerica = dataLALA.filter(country => {\r\n                return country.region.includes('America');\r\n                \r\n            });\r\n     \r\n            init(dataAmerica, 'load');\r\n        }\r\n    })\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    launchApp();\r\n    \r\n    dnButtonF();\r\n\r\n    filterInput();\r\n});"]}